0.
CREATE TABLE planets
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(30) NOT NULL
);

CREATE TABLE spaceports
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
planet_id INT,
CONSTRAINT fk_spaceports_planets foreign key(planet_id) references planets(id)
);

CREATE TABLE spaceships
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
manufacturer VARCHAR(30) NOT NULL,
light_speed_rate INT DEFAULT 0
);

CREATE TABLE colonists
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
ucn CHAR(10) NOT NULL UNIQUE,
birth_date DATE NOT NULL
);

CREATE TABLE journeys
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
journey_start DATETIME NOT NULL,
journey_end DATETIME NOT NULL,
purpose ENUM('Medical', 'Technical', 'Educational','Military') NOT NULL,
destination_spaceport_id INT,
spaceship_id INT,
CONSTRAINT fk_journeys_spaceports foreign key(destination_spaceport_id) references spaceports(id),
CONSTRAINT fk_journeys_spaceships foreign key(spaceship_id) references spaceships(id)
);

CREATE TABLE travel_cards
(
id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
card_number CHAR(10) NOT NULL UNIQUE,
job_during_journey ENUM('Pilot', 'Engineer', 'Trooper', 'Cleaner','Cook') NOT NULL,
colonist_id INT,
journey_id INT,
CONSTRAINT fk_tr_cards_colonists foreign key(colonist_id) references colonists(id),
CONSTRAINT fk_tr_cards_journeys foreign key(journey_id) references journeys(id)
);


1.
INSERT INTO travel_cards(card_number,job_during_journey,colonist_id,journey_id)
SELECT 
CASE
WHEN birth_date > '1980-01-01' THEN CONCAT(YEAR(birth_date),DAY(birth_date),LEFT(ucn,4))
ELSE CONCAT(YEAR(birth_date),MONTH(birth_date),RIGHT(ucn,4))
END AS card_number,
CASE
WHEN id%2=0 THEN 'Pilot'
WHEN id%3=0 THEN 'Cook'
ELSE 'Engineer'
END AS job_during_journey,
id,
LEFT(ucn,1) AS journey_id
FROM colonists
WHERE id BETWEEN 96 AND 100;

2.
UPDATE journeys
SET purpose=
CASE
WHEN id%2=0 THEN 'Medical'
WHEN id%3=0 THEN 'Technical'
WHEN id%5=0 THEN 'Educational'
WHEN id%7=0 THEN 'Military'
ELSE purpose
END


3.
DELETE FROM colonists
WHERE id NOT IN(SELECT tc.colonist_id FROM travel_cards AS tc)

4.
SELECT card_number,job_during_journey
FROM travel_cards
order by card_number

5.
SELECT id,CONCAT(first_name,' ',last_name) AS full_name,ucn
FROM colonists
ORDER BY first_name,last_name,id

6.
SELECT id,journey_start,journey_end
FROM journeys 
WHERE purpose='Military'
ORDER BY journey_start

7.
SELECT c.id,CONCAT(c.first_name,' ',c.last_name) AS full_name
FROM colonists AS c
JOIN travel_cards AS t ON c.id=t.colonist_id
WHERE t.job_during_journey='Pilot'
ORDER BY c.id;

8.
SELECT COUNT(c.id) AS count
FROM colonists AS c
JOIN travel_cards AS t ON c.id=t.colonist_id
JOIN journeys AS j ON j.id=t.journey_id
WHERE j.purpose='Technical';

9.
SELECT s.name,sp.name
FROM spaceships AS s
JOIN journeys AS j ON j.spaceship_id=s.id
JOIN spaceports AS sp ON sp.id=j.destination_spaceport_id
WHERE s.light_speed_rate=(SELECT MAX(light_speed_rate) from spaceships); 

10.
SELECT s.name,s.manufacturer
FROM spaceships AS s
JOIN journeys AS j ON j.spaceship_id=s.id
JOIN travel_cards AS t ON journey_id=j.id
JOIN colonists AS c ON c.id=t.colonist_id
WHERE t.job_during_journey='Pilot' AND TIMESTAMPDIFF(year,c.birth_date,'2019-01-01') < 30
ORDER BY s.name; 

11.
SELECT p.name,s.name
FROM planets AS p
JOIN spaceports AS s ON s.planet_id=p.id
JOIN journeys AS j ON j.destination_spaceport_id=s.id
WHERE j.purpose='Educational'
ORDER BY s.name DESC

12.
SELECT p.name,COUNT(j.id) AS journeys_count
FROM planets AS p
JOIN spaceports AS s ON s.planet_id=p.id
JOIN journeys AS j ON j.destination_spaceport_id=s.id
GROUP BY p.name
ORDER BY journeys_count DESC,p.name

13.
SELECT k.id,k.planet_name,k.spaceport_name,k.purpose
from
(SELECT j.id,p.name AS planet_name,s.name as spaceport_name,j.purpose,TIMESTAMPDIFF(DAY,journey_start,journey_end) AS diff
FROM planets AS p
JOIN spaceports AS s ON s.planet_id=p.id
JOIN journeys AS j ON j.destination_spaceport_id=s.id
ORDER BY difF
LIMIT 1 ) AS k

14.
SELECT k.job_name FROM
(SELECT t.job_during_journey AS job_name,TIMESTAMPDIFF(DAY,journey_start,journey_end) AS diff,COUNT(t.colonist_id) AS count_col
FROM journeys as j
RIGHT JOIN travel_cards AS t ON j.id=t.journey_id
GROUP BY job_name
ORDER BY diff desc,count_col
LIMIT 1) as k

15.
CREATE FUNCTION udf_count_colonists_by_destination_planet (planet_name VARCHAR (30)) 
RETURNS INT
BEGIN
DECLARE c_count INT;
SET c_count:=(SELECT COUNT(t.colonist_id) FROM travel_cards AS t 
JOIN journeys AS j ON t.journey_id=j.id
JOIN spaceports as s on s.id=j.destination_spaceport_id
JOIN planets AS p ON p.id=s.planet_id
WHERE p.name=planet_name);
RETURN c_count;
END

16.
CREATE PROCEDURE udp_modify_spaceship_light_speed_rate(spaceship_name VARCHAR(50), light_speed_rate_increse INT(11))
BEGIN
START TRANSACTION;
IF spaceship_name NOT IN ( SELECT name FROM spaceships)
THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Spaceship you are trying to modify does not exists.';
ROLLBACK;
ELSE 
UPDATE spaceships
SET light_speed_rate=light_speed_rate+light_speed_rate_increse
WHERE name=spaceship_name;
END IF; 
COMMIT;
END 

